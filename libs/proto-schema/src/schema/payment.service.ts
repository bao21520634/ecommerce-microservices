// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.6.1
//   protoc               v3.19.6
// source: payment.service.proto

/* eslint-disable */
import { ChargeRequest, ChargeResponse } from "./charge";
import {
  CancelCheckoutRequest,
  CheckoutRequest,
  CheckoutResponse,
  PlaceOrderRequest,
  PlaceOrderResponse,
} from "./checkout";
import {
  GetOrderPaymentDetailsRequest,
  OrderPaymentDetailsResponse,
  PaymentHistoryRequest,
  PaymentHistoryResponse,
} from "./paymentHistory";

export const protobufPackage = "payment";

export interface PaymentService<Context extends DataLoaders> {
  /** Checkout and Order Management */
  InitiateCheckout(ctx: Context, request: CheckoutRequest): Promise<CheckoutResponse>;
  PlaceOrder(ctx: Context, request: PlaceOrderRequest): Promise<PlaceOrderResponse>;
  CancelCheckout(ctx: Context, request: CancelCheckoutRequest): Promise<CheckoutResponse>;
  /** Payment Processing */
  CreateCharge(ctx: Context, request: ChargeRequest): Promise<ChargeResponse>;
  /** Payment and Order Queries */
  GetPaymentHistory(ctx: Context, request: PaymentHistoryRequest): Promise<PaymentHistoryResponse>;
  GetOrderPaymentDetails(ctx: Context, request: GetOrderPaymentDetailsRequest): Promise<OrderPaymentDetailsResponse>;
}

export interface DataLoaderOptions {
  cache?: boolean;
}

export interface DataLoaders {
  rpcDataLoaderOptions?: DataLoaderOptions;
  getDataLoader<T>(identifier: string, constructorFn: () => T): T;
}
