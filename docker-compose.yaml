services:
    eventstore:
        container_name: eventstore
        image: eventstore/eventstore:22.10.3-buster-slim
        environment:
            - EVENTSTORE_CLUSTER_SIZE=1
            - EVENTSTORE_RUN_PROJECTIONS=All
            - EVENTSTORE_START_STANDARD_PROJECTIONS=true
            - EVENTSTORE_EXT_TCP_PORT=1113
            - EVENTSTORE_HTTP_PORT=2113
            - EVENTSTORE_INSECURE=true
            - EVENTSTORE_ENABLE_EXTERNAL_TCP=true
            - EVENTSTORE_ENABLE_ATOM_PUB_OVER_HTTP=true
        ports:
            - '1113:1113'
            - '2113:2113'
        networks:
            - app-network

    redis:
        container_name: redis
        image: redis:7.2.4
        ports:
            - '6379:6379'
        networks:
            - app-network

    nats:
        container_name: nats
        image: nats:2.10.9-alpine
        ports:
            - '4222:4222'
            - '8222:8222'
            - '6222:6222'
        networks:
            - app-network

    elasticsearch:
        container_name: elasticsearch
        image: docker.elastic.co/elasticsearch/elasticsearch:8.17.1
        environment:
            - discovery.type=single-node
            - 'ES_JAVA_OPTS=-Xms1g -Xmx1g'
            - ELASTIC_PASSWORD=changeme
            - xpack.security.enabled=false
        mem_limit: 2g
        ulimits:
            memlock:
                soft: -1
                hard: -1
        restart: unless-stopped
        ports:
            - '9200:9200'
            - '9300:9300'
        healthcheck:
            test: ['CMD', 'curl', '-f', 'http://localhost:9200/_cluster/health']
            interval: 10s
            timeout: 5s
            retries: 5
            start_period: 30s
        networks:
            - app-network

    kibana:
        image: docker.elastic.co/kibana/kibana:8.17.1
        container_name: kibana
        depends_on:
            - elasticsearch
        environment:
            - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
        ports:
            - '5601:5601'
        networks:
            - app-network

    monstache:
        image: rwynn/monstache:6.7.21
        container_name: monstache
        working_dir: /monstache
        depends_on:
            elasticsearch:
                condition: service_healthy
        volumes:
            - ./monstache:/monstache
        command: ['-f', './config.toml']
        restart: on-failure
        networks:
            - app-network

networks:
    app-network:
        driver: bridge
