model User {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  firebaseUid String @unique

  roles   Role[]   @relation(fields: [roleIds], references: [id])
  roleIds String[] @db.ObjectId

  metadata  Json?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  addresses Address[]
}

model Role {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique // "admin", "vendor", "customer"
  description String?
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  permissions   Permission[] @relation(fields: [permissionIds], references: [id])
  permissionIds String[]     @db.ObjectId

  users   User[]   @relation(fields: [userIds], references: [id])
  userIds String[] @db.ObjectId
}

model Permission {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  name        String   @unique
  description String?
  resource    String // "product", "order", "category", "user"
  action      String // "read", "create", "update", "delete"
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  roles   Role[]   @relation(fields: [roleIds], references: [id])
  roleIds String[] @db.ObjectId
}

model Address {
  id String @id @default(auto()) @map("_id") @db.ObjectId

  address1 String
  address2 String?
  country  String
  state    String
  city     String
  zip      String

  userId String @db.ObjectId
  user   User   @relation(fields: [userId], references: [id])

  @@index([userId])
}
