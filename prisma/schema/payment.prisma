enum PaymentMethod {
  CreditCard
  DebitCard
  PayPal
}

enum ChargeStatus {
  Pending
  Succeeded
  Failed
  Refunded
}

enum CheckoutStatus {
  Initiated
  Processing
  Completed
  Failed
  Cancelled
}

model Checkout {
  id              String         @id @default(auto()) @map("_id") @db.ObjectId
  createdAt       DateTime       @default(now())
  updatedAt       DateTime       @updatedAt
  customerId      String         @db.ObjectId  // Reference to User in Account service
  status          CheckoutStatus @default(Initiated)
  
  // Order details
  items           CheckoutItem[]
  subTotal        Float
  tax             Float
  discount        Float
  total           Float
  
  // Payment details
  paymentMethod   PaymentMethod
  orderId         String?        @db.ObjectId  // Reference to Order in Order service
  charge          Charge?        @relation(fields: [chargeId], references: [id])
  chargeId        String?        @db.ObjectId
  
  // Shipping details
  shippingAddressId String?      @db.ObjectId  // Reference to Address in Account service
}

model CheckoutItem {
  id              String    @id @default(auto()) @map("_id") @db.ObjectId
  checkout        Checkout  @relation(fields: [checkoutId], references: [id])
  checkoutId      String    @db.ObjectId
  
  productId       String    @db.ObjectId  // Reference to Product in Catalog service
  name            String
  unitPrice       Float
  quantity        Int
  totalPrice      Float
}

model Charge {
  id              String        @id @default(auto()) @map("_id") @db.ObjectId
  amount          Float
  currency        String
  paymentMethod   PaymentMethod
  status          ChargeStatus  @default(Pending)
  description     String?
  createdAt       DateTime      @default(now())
  
  // Payment details
  customerId      String        @db.ObjectId  // Reference to User in Account service
  orderId         String        @db.ObjectId  // Reference to Order in Order service
  
  // Relations
  checkouts       Checkout[]
}