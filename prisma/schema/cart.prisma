enum OrderStatus {
  Draft
  WaitForConfirmation
  ReadyForDelivery
  Delivery
  Delivered
  Cancelled
}

enum PaymentStatus {
  Pending
  Paid
  UnPaid
}

enum ShippingStatus {
  Delivering
}

model Order {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  code       String  @unique
  customerId String  @db.ObjectId // Reference to User in Account service
  addressId  String? @db.ObjectId // Reference to Address in Account service

  expectedDeliveryDate String?
  paymentMethod        String?
  subTotal             Float
  discount             Float     @default(0)
  tax                  Float     @default(0)
  deliveryFee          Float     @default(0)
  total                Float
  isPaid               Boolean   @default(true)
  paidAt               DateTime?
  deliveredAt          DateTime?
  note                 String?

  orderStatus    OrderStatus     @default(Draft)
  paymentStatus  PaymentStatus   @default(Pending)
  shippingStatus ShippingStatus?

  paymentResult Json?

  orderItems OrderItem[]
}

model OrderItem {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  productVariantId String @db.ObjectId // Reference to Product in Catalog service
  order            Order? @relation(fields: [orderId], references: [id])
  orderId          String @db.ObjectId

  displayName  String
  priceInclTax Float
  priceExclTax Float
  quantity     Int
  subTotal     Float
  discount     Float  @default(0)
  tax          Float  @default(0)
  total        Float
}
